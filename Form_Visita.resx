<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbFotoUser.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>